name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - main  # Add this


env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_REPO_BACKEND: backend-app
  ECR_REPO_FRONTEND: frontend-app

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
    - name: ‚¨áÔ∏è Checkout code
      uses: actions/checkout@v4

    - name: üîê Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: üß™ Backend Tests
      working-directory: ./backend
      run: |
        pip install -r requirements.txt
        pytest

    - name: üß™ Frontend Tests
      working-directory: ./frontend
      run: |
        npm install
        npm run test || echo "No tests defined"

    - name: üî® Build & Push Backend Image
      working-directory: ./backend
      run: |
        IMAGE_TAG=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO_BACKEND }}:${{ github.sha }}
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

    - name: üî® Build & Push Frontend Image
      working-directory: ./frontend
      run: |
        IMAGE_TAG=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO_FRONTEND }}:${{ github.sha }}
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

    - name: üß™ Backend Tests
      working-directory: ./backend
      run: |
       python -m venv venv
       source venv/bin/activate
       pip install --upgrade pip
       pip install -r requirements.txt
       pytest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: ‚¨áÔ∏è Checkout Code
      uses: actions/checkout@v4

    - name: üîê Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: üöÄ Deploy via Terraform (or ECS CLI)
      run: |
        echo "Terraform or ECS deploy step goes here"


